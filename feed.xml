<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://min33sky.github.io</id><title>MingtypE</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-05-02T05:29:13+09:00</updated> <author> <name>min33sky</name> <uri>https://min33sky.github.io</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://min33sky.github.io" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 min33sky </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>tsconfig에서 paths 설정 시 eslint 에러 해결하기</title><link href="https://min33sky.github.io/posts/paths-tsconfig-setting/" rel="alternate" type="text/html" title="tsconfig에서 paths 설정 시 eslint 에러 해결하기" /><published>2021-03-02T00:00:00+09:00</published> <updated>2021-03-02T00:00:00+09:00</updated> <id>https://min33sky.github.io/posts/paths-tsconfig-setting/</id> <content src="https://min33sky.github.io/posts/paths-tsconfig-setting/" /> <author> <name>min33sky</name> </author> <category term="Programming" /> <category term="React" /> <summary> Intro 모듈을 불러올 때 ’../../../../Component’ 이런 식으로 상대 경로가 길어지는 경우가 많다. 길어진다고 성능에 지장을 주는건 아니지만 가독성이 떨어지므로 tsconfig의 paths 속성으로 별칭을 지어주면 절대경로처럼 사용할 수 있다. tsconfig.json 예시 "paths": { "@hooks/*": ["hooks/*"], "@components/*": ["components/*"], "@pages/*": ["pages/*"], } 모듈을 불러올 때 import Login from "@page/Login"; Error eslint를 사용한다면 위의 경우에서 Unable to resolve path to modu... </summary> </entry> <entry><title>NextJS에서 styled-components SSR 구현하기</title><link href="https://min33sky.github.io/posts/next-styled-components-ssr/" rel="alternate" type="text/html" title="NextJS에서 styled-components SSR 구현하기" /><published>2021-01-31T00:00:00+09:00</published> <updated>2021-01-31T00:00:00+09:00</updated> <id>https://min33sky.github.io/posts/next-styled-components-ssr/</id> <content src="https://min33sky.github.io/posts/next-styled-components-ssr/" /> <author> <name>min33sky</name> </author> <category term="Programming" /> <category term="Next" /> <summary> Intro Next.js에서 styled-components를 사용할 때 SSR을 지원하기 위해 따로 설정이 필요하다. 이건 Next.js에서 예시를 제공하기 때문에 그냥 붙여넣어 쓰면 된다. 참고 링크 Required babel-plugin-styled-components babel-plugin-inline-react-svg (svg 사용 시) Full Code _document.tsx와 .babelrc 파일에 아래 코드를 붙여 넣는다. pages/\_document.tsx import Document, { DocumentContext } from "next/document"; import { ServerStyleSheet } from "styled-components... </summary> </entry> <entry><title>eslint에 prettier 그리고 typescript 설정하기</title><link href="https://min33sky.github.io/posts/eslint-prettier-typescript/" rel="alternate" type="text/html" title="eslint에 prettier 그리고 typescript 설정하기" /><published>2021-01-29T00:00:00+09:00</published> <updated>2021-01-29T00:00:00+09:00</updated> <id>https://min33sky.github.io/posts/eslint-prettier-typescript/</id> <content src="https://min33sky.github.io/posts/eslint-prettier-typescript/" /> <author> <name>min33sky</name> </author> <category term="Programming" /> <category term="React" /> <summary> Intro eslint와 prettier를 같이 사용할 때 충돌이 발생하는 경우가 많다. 아래의 설정을 통해서 이 문제를 해결해 보겠다. typescript는 덤이다. Install npm i -D eslint eslint-config-prettier eslint-plugin-prettier Setting npx eslint --init 실행 후 import, react, typescript, airbnb 선택 .eslintrc.js에 아래 코드를 추가 extends: [ 'prettier/@typescript-eslint', 'plugin:prettier/recommended', ], .prettierc을 생성하여 원하는 ... </summary> </entry> <entry><title>파이썬 끄적이기</title><link href="https://min33sky.github.io/posts/second-post/" rel="alternate" type="text/html" title="파이썬 끄적이기" /><published>2021-01-09T00:32:00+09:00</published> <updated>2021-01-16T13:36:35+09:00</updated> <id>https://min33sky.github.io/posts/second-post/</id> <content src="https://min33sky.github.io/posts/second-post/" /> <author> <name>min33sky</name> </author> <category term="Programming" /> <category term="Python" /> <summary> 파이썬에 대해서 끄적여볼까 합니다. 부동 소수점 실수를 가수 부분과 지수 부분으로 나누어 표현하는 방식 가수 부분은 유효 숫자를 나타내고 지수 부분은 소수점의 위치를 나타낸다 부동 소수점 방식은 고정 소수점 방식보다 넓은 범위의 수를 나타낼 수 있다. 근사값으로 표현되고 고정 소수점 방식보다 연산 속도가 느리다는 단점이 있다. </summary> </entry> <entry><title>1등</title><link href="https://min33sky.github.io/posts/first-post/" rel="alternate" type="text/html" title="1등" /><published>2021-01-08T12:32:00+09:00</published> <updated>2021-01-10T14:36:09+09:00</updated> <id>https://min33sky.github.io/posts/first-post/</id> <content src="https://min33sky.github.io/posts/first-post/" /> <author> <name>min33sky</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> 첫번째 글입니다. 수정이 됩니까??? </summary> </entry> </feed>
